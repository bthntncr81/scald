name: Deploy Adonis + Inertia App (Multiple Projects)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Adonis.js App
        run: npm run build

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            TMP_DIR="/tmp/env_backups"
            API_URL="https://restapi.posfixmenu.com/api/Project/GetAllProject"
            mkdir -p "$TMP_DIR"

            projects=$(curl -s "$API_URL" | jq -r '.data[]')

            for project in $projects; do
              PROJECT_PATH="/var/www/html/$project"
              DB_NAME="$project"
              echo "Deploying to $PROJECT_PATH..."

              mkdir -p "$PROJECT_PATH"
              cd "$PROJECT_PATH" || continue

              # Upload klasörü yedekle
              [ -d "build/public/uploads" ] && mv build/public/uploads "/tmp/uploads_backup_$project"

              # .env varsa yedekle
              [ -f "build/.env" ] && mv build/.env "$TMP_DIR/.env_$project"

              git pull origin main
              npm install
              npm run build

              # .env dosyasını geri taşı
              [ -f "$TMP_DIR/.env_$project" ] && mv "$TMP_DIR/.env_$project" build/.env
              [ -d "/tmp/uploads_backup_$project" ] && mv "/tmp/uploads_backup_$project" build/public/uploads
              pm2 restart $project || pm2 start build/server.js --name "$project"

              echo "Deployment completed for $PROJECT_PATH (DB: $DB_NAME)"
            done
